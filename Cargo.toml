[package]
name = "spring-batch-rs"
version = "0.3.0"
edition = "2021"
authors = ["Simon Boussekeyt <sboussekeyt@gmail.com>"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/sboussekeyt/spring-batch-rs"
documentation = "https://docs.rs/spring-batch-rs"
keywords = ["batch", "csv", "data", "json", "rdbc", "xml"]
readme = "README.md"
description = "A toolkit for building enterprise-grade batch applications"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3

[lib]
name = "spring_batch_rs"
path = "src/lib.rs"

[dependencies]
log = "0.4"
serde = { version = "1.0", features = ["derive"] }
thiserror = "2.0"
csv = { version = "1.3", optional = true }
fake = { version = "4.3", features = ["time"], optional = true }
rand = { version = "0.9"}
time = { version = "0.3", features = ["serde-human-readable"], optional = true }
serde_json = { version = "1.0" }
tokio = { version = "1.45", features = ["full"] }
sqlx = { version = "0.8", optional = true, features = ["runtime-tokio"] }
anyhow = { version = "1.0" }
mongodb = { version = "3.2", optional = true, features = ["sync"] }
bson = { version = "2.15", optional = true, default-features = false }
uuid = { version = "1.17", features = ["v4"] }
quick-xml = { version = "0.37", features = ["serialize"], optional = true }
tempfile = { version = "3.20", optional = true }
zip = { version = "4.0", optional = true }
sea-orm = { version = "1.1", features = [ "sqlx-postgres", "sqlx-mysql", "sqlx-sqlite", "runtime-tokio-native-tls", "macros", "mock" ], optional = true }
suppaftp = { version = "6.0", optional = true, features = ["native-tls"] }

[dev-dependencies]
spring-batch-rs = { path = ".", features = ["tests-cfg"] }
rand = { version = "0.9" }
mockall = "0.13"
testcontainers = "0.24"
testcontainers-modules = { version = "0.12", features = ["postgres", "mysql", "mongo", "blocking"] }
tokio = { version = "1.0", features = ["full"] }
env_logger = "0.11"

[features]
# Include nothing by default
default = []
tests-cfg = ["full"]

# enable everything
full = [
  "csv",
  "json",
  "logger",
  "fake",
  "rdbc-postgres",
  "rdbc-mysql",
  "rdbc-sqlite",
  "mongodb",
  "xml",
  "zip",
  "ftp",
  "orm"
]

csv = ["dep:csv", "dep:tempfile"]
json = []
xml = ["dep:quick-xml", "dep:tempfile"]
zip = ["dep:zip"]
ftp = ["dep:suppaftp"]
rdbc-postgres = ["sqlx/postgres", "rdbc"]
rdbc-mysql = ["sqlx/mysql", "rdbc"]
rdbc-sqlite = ["sqlx/sqlite", "rdbc"]
mongodb = ["mongodb/sync", "bson"]
fake = ["dep:fake", "dep:time"]
logger = []
rdbc = []
orm = ["dep:sea-orm"]

[[example]]
name = "generate_csv_file_from_json_file_with_processor"
required-features = ["csv", "json"]

[[example]]
name = "generate_json_file_from_csv_string_with_fault_tolerance"
required-features = ["csv", "json"]

[[example]]
name = "generate_json_file_from_fake_persons"
required-features = ["json", "fake"]

[[example]]
name = "generate_csv_file_without_headers_from_fake_persons"
required-features = ["csv", "fake"]

[[example]]
name = "log_records_from_postgres_database"
required-features = ["rdbc-postgres", "logger"]

[[example]]
name = "insert_records_into_mysql_database"
required-features = ["rdbc-mysql", "csv"]

[[example]]
name = "read_records_from_mongodb_database"
required-features = ["mongodb", "csv"]

[[example]]
name = "write_records_to_mongodb_database"
required-features = ["mongodb", "csv"]

[[example]]
name = "generate_json_file_from_xml_file"
required-features = ["xml", "json"]

[[example]]
name = "zip_files_tasklet"
required-features = ["zip"]

[[example]]
name = "ftp_transfer_tasklet"
required-features = ["ftp"]

[[example]]
name = "orm_reader_example"
required-features = ["orm"]
